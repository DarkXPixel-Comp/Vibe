# Параметры приложения (Deployment/Service)
image:
  repository: vibe/auth-service
  tag: 2e12344-dirty
  pullPolicy: IfNotPresent

replicaCount: 1

service:
  type: ClusterIP
  port: 50032

redis:
  password: redis
  secretName: redis-secret

config:
  secretName: service-secret
  namespace: auth
  env:
    GRPC_PORT: 50032
    USER_SERVICE_HOST: user-service.user.svc.cluster.local
    USER_SERVICE_PORT: "50033"
    DATABASE_HOST: auth-pg-rw
    DATABASE_PORT: "5432"
    DATABASE_SSLMODE: disable
    DATABASE_USER: auth_user
    DATABASE_DBNAME: auth-db
    REDIS_HOST: auth-redis-leader
    REDIS_PORT: "6379"


db:
  username: auth_user
  password: postgres 
  secretName: auth-db-secret
  database: auth-db

migrations:
  enabled: true
  command: /app/migrate -path=/app/migrations \
    -database "postgres://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_DBNAME)?sslmode=$(DATABASE_SSLMODE)" up


# Конфиг сабчарта postgres-cluster
postgres-cluster:
  clusterName: auth-pg
  namespace: auth
  instances: 1
  storage:
    size: 2Gi
  roles:
    - name: auth_user
      passwordSecret: auth-db-secret
  database:
    enabled: true
    name: auth-db
    owner: auth_user
  expose:
    rw:
      enabled: false 

redis-cluster:
  clusterName: auth-redis
  namespace: auth
  instances: 1                # для dev можно 1, для prod — 3+
  storage:
    size: 512Mi
    storageClass: ""          # если пусто — возьмется по умолчанию
  auth:
    enabled: true
    passwordSecret: auth-redis-secret
    password: myRedisPass123  # в проде лучше задавать через секрет
  expose:
    leader:
      enabled: true
      type: LoadBalancer
      port: 6379
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
    follower:
      enabled: false
      type: NodePort
      port: 30079
      annotations: {}

  metrics:
    enabled: false

