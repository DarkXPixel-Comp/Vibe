apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 8080 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains: ["*"]
                  routes:
                  - name: test_route
                    match:
                      prefix: "/"
                    route:
                      cluster: auth_service
                      timeout: 30s
                  - name: auth_route
                    match: 
                      prefix: "/auth.AuthService/"
                      grpc: {}
                    route:
                      cluster: auth_service
                      timeout: 30s
                   

                  - name: user_route
                    match:
                      prefix: "/user.UserService/"
                      grpc: {}
                    route:
                      cluster: user_service
                      timeout: 30s
                  
              http_filters:
              - name: envoy.filters.http.grpc_web
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                  log_format:
                    text_format: "[%START_TIME%] %REQ(:method)% %REQ(:path)% -> %RESPONSE_CODE% grpc-status=%TRAILER(grpc-status)% grpc-message=%TRAILER(grpc-message)%\n"

      clusters:
        - name: user_service
          connect_timeout: 5s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: user_service
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: user-service.user.svc.cluster.local, port_value: 50033 }
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http_protocol_options: {}

        - name: auth_service
          connect_timeout: 5s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: auth_service
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: auth-service.auth.svc.cluster.local, port_value: 50032 }
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http_protocol_options: {}